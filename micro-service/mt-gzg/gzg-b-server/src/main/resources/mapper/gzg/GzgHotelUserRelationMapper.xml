<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ly.mt.gzg.b.server.gzgb.mapper.GzgHotelUserRelationMapper" >
  <resultMap id="BaseResultMap" type="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="hotel_id" property="hotelId" jdbcType="BIGINT" />
    <result column="tyep" property="tyep" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, hotel_id, tyep, create_time
  </sql>
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from gzg_hotel_user_relation where user_id=#{userId}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gzg_hotel_user_relation
    where id = #{id,jdbcType=INTEGER}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gzg_hotel_user_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation" >
    insert into gzg_hotel_user_relation (id, user_id, hotel_id, 
      tyep, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{hotelId,jdbcType=BIGINT}, 
      #{tyep,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation" >
    insert into gzg_hotel_user_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="tyep != null" >
        tyep,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="tyep != null" >
        #{tyep,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation" >
    update gzg_hotel_user_relation
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=BIGINT},
      </if>
      <if test="tyep != null" >
        tyep = #{tyep,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation" >
    update gzg_hotel_user_relation
    set user_id = #{userId,jdbcType=BIGINT},
      hotel_id = #{hotelId,jdbcType=BIGINT},
      tyep = #{tyep,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="delByHotelIdAndUserId">
     delete from gzg_hotel_user_relation
     where hotel_id = #{hotelId} and user_id = #{userId}
  </delete>
  <select id="findByHotelIdAndUserId" resultType="com.ly.mt.core.common.entity.gzg.GzgHotelUserRelation">
    select * from gzg_hotel_user_relation  where hotel_id = #{hotelId} and user_id = #{userId}
  </select>

  <insert id="batchInsert">
    insert into gzg_hotel_user_relation (user_id, hotel_id,
    tyep)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.hotelId,jdbcType=BIGINT},
      #{item.tyep,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>